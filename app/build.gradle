apply plugin: 'com.dd.comgradle'
apply plugin: 'me.tatarka.retrolambda'

def apkName = "shopping"

android {
    compileSdkVersion compileSdk_Version.toInteger()
    buildToolsVersion "${buildTools_Version}"

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.nhzw.shopping"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 3
        versionName "1.0.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }

        // Enabling multidex support.
        multiDexEnabled true
    }

    afterEvaluate {
        tasks.matching {
            it.name.startsWith('dex')
        }.each { dx ->
            if (dx.additionalParameters == null) {
                dx.additionalParameters = []
            }
            dx.additionalParameters += '--multi-dex' // enable multidex

            // optional
            // dx.additionalParameters += "--main-dex-list=$projectDir/<filename>".toString() // enable the main-dex-list
        }
    }

    productFlavors {
        master {}
        yingyongbao {}
        huawei {}
        oppo {}
        meizu {}
        xiaomi {}
        vivo {}
        qihu360 {}
        baiduzhushou {}
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [HIPPO_CHANNEL_VALUE: name]
    }

    signingConfigs {
        release {
            storeFile file('nhzw_keystore')
            keyAlias 'nhzw'
            keyPassword 'abc123'
            storePassword 'abc123'
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            multiDexKeepFile 'multidex-config.txt'
        }
        debug {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //输出文件配置
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                if ("release".equals(variant.buildType.name)) {
                    output.outputFile = new File(outputFile.parent, "${apkName}_${defaultConfig.versionCode}_${variant.productFlavors.get(0).getName()}_release_${buildTime()}.apk")
                } else if ("debug_build".equals(variant.buildType.name)) {
                    output.outputFile = new File(outputFile.parent, "${apkName}_${defaultConfig.versionCode}_dev_${buildTime()}.apk")
                } else {
                    output.outputFile = new File(outputFile.parent, "${apkName}_${defaultConfig.versionCode}_dev.apk")
                }
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:cardview-v7:26+'
    compile project(':componentservice')
    compile project(':jd_kepler_sdk_2.1.0')
    compile 'com.android.support:multidex:1.0.1'
    testCompile 'junit:junit:4.12'

    compile 'com.tencent.bugly:crashreport:latest.release'

    //无需引入tinker的任何库,使用tinkerpatch sdk即可
    compile("com.tinkerpatch.sdk:tinkerpatch-android-sdk:${TINKERPATCH_VERSION}") {
        changing = true
    }
}

combuild {
    applicatonName = 'com.nhzw.shopping.application.AppApplication'
    isRegisterCompoAuto = true
}

apply from: 'tinkerpatch.gradle'
/**
 * 构建时间
 * @return
 */
static def buildTime() {
    return new Date().format("yyyy-MM-dd_HHmmss", TimeZone.getTimeZone("GMT+8"))
}